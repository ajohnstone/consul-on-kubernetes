#!/bin/sh

cfssl gencert -initca ca/ca-csr.json | cfssljson -bare ca
cfssl gencert \
  -ca=ca.pem \
  -ca-key=ca-key.pem \
  -config=ca/ca-config.json \
  -profile=default \
  ca/consul-csr.json | cfssljson -bare consul;

GOSSIP_ENCRYPTION_KEY=$(consul keygen);
echo GOSSIP_ENCRYPTION_KEY - $GOSSIP_ENCRYPTION_KEY
kubectl create secret generic consul \
  --from-literal="gossip-encryption-key=${GOSSIP_ENCRYPTION_KEY}" \
  --from-file=ca.pem \
  --from-file=consul.pem \
  --from-file=consul-key.pem

kubectl create configmap consul --from-file=configs/server.json;

kubectl create -f services/consul.yaml;

kubectl create -f statefulsets/consul.yaml;

kubectl get pods -owide;


while [ 1 ]; do 
    stateful_up=$(kubectl get --no-headers statefulsets consul -owide 2>/dev/null | awk '{ if ($2 != $3) { print 0 } else { print 1; } }' 2>/dev/null);
    if [ "${stateful_up}" == "1" ]; then
        printf 'consul stateful service up\n'
        break;
    else
        printf '.';
        sleep 1;
    fi
done

echo;

function get_status {
    local conul_num=${1:-0};
    kubectl get pods -owide;
    kubectl exec --tty -i consul-${conul_num} -- consul members -detailed;
    kubectl exec --tty -i consul-${conul_num} -- consul operator raft -list-peers;
}

get_status;


#kubectl create -f jobs/consul-join.yaml
